import{e as ne}from"./chunk-KCY3PAEP.js";import{createServices as ie}from"@dfinity/utils";var ae=({IDL:e})=>{let o=e.Record({allowed_principals:e.Vec(e.Principal),access_controls_enabled:e.Bool,sns_subnet_ids:e.Vec(e.Principal)}),n=e.Record({wasm:e.Vec(e.Nat8),proposal_id:e.Opt(e.Nat64),canister_type:e.Int32}),r=e.Record({hash:e.Vec(e.Nat8),wasm:e.Opt(n)}),t=e.Record({message:e.Text}),_=e.Variant({Error:t,Hash:e.Vec(e.Nat8)}),d=e.Record({result:e.Opt(_)}),l=e.Record({dissolve_delay_interval_seconds:e.Nat64,count:e.Nat64}),a=e.Record({id:e.Opt(e.Principal)}),u=e.Record({canisters:e.Vec(a)}),O=e.Record({slope_numerator:e.Opt(e.Nat64),intercept_icp_e8s:e.Opt(e.Nat64),from_direct_participation_icp_e8s:e.Opt(e.Nat64),slope_denominator:e.Opt(e.Nat64),to_direct_participation_icp_e8s:e.Opt(e.Nat64)}),R=e.Record({serialized_representation:e.Opt(e.Text)}),m=e.Record({coefficient_intervals:e.Vec(O),max_neurons_fund_participation_icp_e8s:e.Opt(e.Nat64),min_direct_participation_threshold_icp_e8s:e.Opt(e.Nat64),ideal_matched_participation_function:e.Opt(R)}),N=e.Record({total_e8s:e.Nat64}),i=e.Record({controller:e.Opt(e.Principal),dissolve_delay_seconds:e.Nat64,memo:e.Nat64,stake_e8s:e.Nat64,vesting_period_seconds:e.Opt(e.Nat64)}),w=e.Record({developer_neurons:e.Vec(i)}),P=e.Record({airdrop_neurons:e.Vec(i)}),V=e.Record({total_e8s:e.Nat64,initial_swap_amount_e8s:e.Nat64}),h=e.Record({treasury_distribution:e.Opt(N),developer_distribution:e.Opt(w),airdrop_distribution:e.Opt(P),swap_distribution:e.Opt(V)}),y=e.Variant({FractionalDeveloperVotingPower:h}),v=e.Record({iso_codes:e.Vec(e.Text)}),S=e.Record({url:e.Opt(e.Text),max_dissolve_delay_seconds:e.Opt(e.Nat64),max_dissolve_delay_bonus_percentage:e.Opt(e.Nat64),nns_proposal_id:e.Opt(e.Nat64),neurons_fund_participation:e.Opt(e.Bool),min_participant_icp_e8s:e.Opt(e.Nat64),neuron_basket_construction_parameters:e.Opt(l),fallback_controller_principal_ids:e.Vec(e.Text),token_symbol:e.Opt(e.Text),final_reward_rate_basis_points:e.Opt(e.Nat64),max_icp_e8s:e.Opt(e.Nat64),neuron_minimum_stake_e8s:e.Opt(e.Nat64),confirmation_text:e.Opt(e.Text),logo:e.Opt(e.Text),name:e.Opt(e.Text),swap_start_timestamp_seconds:e.Opt(e.Nat64),swap_due_timestamp_seconds:e.Opt(e.Nat64),initial_voting_period_seconds:e.Opt(e.Nat64),neuron_minimum_dissolve_delay_to_vote_seconds:e.Opt(e.Nat64),description:e.Opt(e.Text),max_neuron_age_seconds_for_age_bonus:e.Opt(e.Nat64),min_participants:e.Opt(e.Nat64),initial_reward_rate_basis_points:e.Opt(e.Nat64),wait_for_quiet_deadline_increase_seconds:e.Opt(e.Nat64),transaction_fee_e8s:e.Opt(e.Nat64),dapp_canisters:e.Opt(u),neurons_fund_participation_constraints:e.Opt(m),max_age_bonus_percentage:e.Opt(e.Nat64),initial_token_distribution:e.Opt(y),reward_rate_transition_duration_seconds:e.Opt(e.Nat64),token_logo:e.Opt(e.Text),token_name:e.Opt(e.Text),max_participant_icp_e8s:e.Opt(e.Nat64),min_direct_participation_icp_e8s:e.Opt(e.Nat64),proposal_reject_cost_e8s:e.Opt(e.Nat64),restricted_countries:e.Opt(v),min_icp_e8s:e.Opt(e.Nat64),max_direct_participation_icp_e8s:e.Opt(e.Nat64)}),g=e.Record({sns_init_payload:e.Opt(S)}),x=e.Record({restored_dapp_canisters:e.Vec(a),nns_controlled_dapp_canisters:e.Vec(a),sns_controlled_dapp_canisters:e.Vec(a)}),b=e.Record({root:e.Opt(e.Principal),swap:e.Opt(e.Principal),ledger:e.Opt(e.Principal),index:e.Opt(e.Principal),governance:e.Opt(e.Principal)}),T=e.Record({dapp_canisters_transfer_result:e.Opt(x),subnet_id:e.Opt(e.Principal),error:e.Opt(t),canisters:e.Opt(b)}),c=e.Record({allowed_principals:e.Vec(e.Principal)}),f=e.Record({proposal_id:e.Nat64}),p=e.Record({root_canister_id:e.Opt(e.Principal),governance_canister_id:e.Opt(e.Principal),index_canister_id:e.Opt(e.Principal),swap_canister_id:e.Opt(e.Principal),ledger_canister_id:e.Opt(e.Principal)}),F=e.Variant({Error:t,DeployedSns:p}),q=e.Record({get_deployed_sns_by_proposal_id_result:e.Opt(F)}),s=e.Record({archive_wasm_hash:e.Vec(e.Nat8),root_wasm_hash:e.Vec(e.Nat8),swap_wasm_hash:e.Vec(e.Nat8),ledger_wasm_hash:e.Vec(e.Nat8),governance_wasm_hash:e.Vec(e.Nat8),index_wasm_hash:e.Vec(e.Nat8)}),W=e.Record({governance_canister_id:e.Opt(e.Principal),current_version:e.Opt(s)}),G=e.Record({next_version:e.Opt(s)}),C=e.Record({hash:e.Vec(e.Nat8)}),k=e.Record({proposal_id:e.Opt(e.Nat64)}),A=e.Record({sns_subnet_ids:e.Vec(e.Principal)}),U=e.Record({hash:e.Vec(e.Nat8)}),E=e.Record({wasm:e.Opt(n)}),B=e.Record({hash:e.Opt(e.Vec(e.Nat8))}),M=e.Record({contents:e.Opt(e.Vec(e.Nat8)),name:e.Opt(e.Text),visibility:e.Opt(e.Text)}),j=e.Record({sections:e.Vec(M)}),z=e.Variant({Ok:j,Error:t}),H=e.Record({result:e.Opt(z)}),J=e.Record({next_version:e.Opt(s),current_version:e.Opt(s)}),K=e.Record({upgrade_path:e.Vec(J),sns_governance_canister_id:e.Opt(e.Principal)}),Q=e.Record({error:e.Opt(t)}),X=e.Record({instances:e.Vec(p)}),Y=e.Record({limit:e.Nat32,starting_at:e.Opt(s),sns_governance_canister_id:e.Opt(e.Principal)}),Z=e.Record({archive_wasm_hash:e.Text,root_wasm_hash:e.Text,swap_wasm_hash:e.Text,ledger_wasm_hash:e.Text,governance_wasm_hash:e.Text,index_wasm_hash:e.Text}),$=e.Record({pretty_version:e.Opt(Z),version:e.Opt(s)}),D=e.Record({steps:e.Vec($)}),I=e.Record({added_principals:e.Vec(e.Principal),removed_principals:e.Vec(e.Principal)}),L=e.Variant({Error:t,AllowedPrincipals:c}),ee=e.Record({update_allowed_principals_result:e.Opt(L)}),te=e.Record({sns_subnet_ids_to_add:e.Vec(e.Principal),sns_subnet_ids_to_remove:e.Vec(e.Principal)}),se=e.Record({error:e.Opt(t)});return e.Service({add_wasm:e.Func([r],[d],[]),deploy_new_sns:e.Func([g],[T],[]),get_allowed_principals:e.Func([e.Record({})],[c],[]),get_deployed_sns_by_proposal_id:e.Func([f],[q],[]),get_latest_sns_version_pretty:e.Func([e.Null],[e.Vec(e.Tuple(e.Text,e.Text))],[]),get_next_sns_version:e.Func([W],[G],[]),get_proposal_id_that_added_wasm:e.Func([C],[k],[]),get_sns_subnet_ids:e.Func([e.Record({})],[A],[]),get_wasm:e.Func([U],[E],[]),get_wasm_metadata:e.Func([B],[H],[]),insert_upgrade_path_entries:e.Func([K],[Q],[]),list_deployed_snses:e.Func([e.Record({})],[X],[]),list_upgrade_steps:e.Func([Y],[D],[]),update_allowed_principals:e.Func([I],[ee],[]),update_sns_subnet_list:e.Func([te],[se],[])})};var oe=({IDL:e})=>{let o=e.Record({allowed_principals:e.Vec(e.Principal),access_controls_enabled:e.Bool,sns_subnet_ids:e.Vec(e.Principal)}),n=e.Record({wasm:e.Vec(e.Nat8),proposal_id:e.Opt(e.Nat64),canister_type:e.Int32}),r=e.Record({hash:e.Vec(e.Nat8),wasm:e.Opt(n)}),t=e.Record({message:e.Text}),_=e.Variant({Error:t,Hash:e.Vec(e.Nat8)}),d=e.Record({result:e.Opt(_)}),l=e.Record({dissolve_delay_interval_seconds:e.Nat64,count:e.Nat64}),a=e.Record({id:e.Opt(e.Principal)}),u=e.Record({canisters:e.Vec(a)}),O=e.Record({slope_numerator:e.Opt(e.Nat64),intercept_icp_e8s:e.Opt(e.Nat64),from_direct_participation_icp_e8s:e.Opt(e.Nat64),slope_denominator:e.Opt(e.Nat64),to_direct_participation_icp_e8s:e.Opt(e.Nat64)}),R=e.Record({serialized_representation:e.Opt(e.Text)}),m=e.Record({coefficient_intervals:e.Vec(O),max_neurons_fund_participation_icp_e8s:e.Opt(e.Nat64),min_direct_participation_threshold_icp_e8s:e.Opt(e.Nat64),ideal_matched_participation_function:e.Opt(R)}),N=e.Record({total_e8s:e.Nat64}),i=e.Record({controller:e.Opt(e.Principal),dissolve_delay_seconds:e.Nat64,memo:e.Nat64,stake_e8s:e.Nat64,vesting_period_seconds:e.Opt(e.Nat64)}),w=e.Record({developer_neurons:e.Vec(i)}),P=e.Record({airdrop_neurons:e.Vec(i)}),V=e.Record({total_e8s:e.Nat64,initial_swap_amount_e8s:e.Nat64}),h=e.Record({treasury_distribution:e.Opt(N),developer_distribution:e.Opt(w),airdrop_distribution:e.Opt(P),swap_distribution:e.Opt(V)}),y=e.Variant({FractionalDeveloperVotingPower:h}),v=e.Record({iso_codes:e.Vec(e.Text)}),S=e.Record({url:e.Opt(e.Text),max_dissolve_delay_seconds:e.Opt(e.Nat64),max_dissolve_delay_bonus_percentage:e.Opt(e.Nat64),nns_proposal_id:e.Opt(e.Nat64),neurons_fund_participation:e.Opt(e.Bool),min_participant_icp_e8s:e.Opt(e.Nat64),neuron_basket_construction_parameters:e.Opt(l),fallback_controller_principal_ids:e.Vec(e.Text),token_symbol:e.Opt(e.Text),final_reward_rate_basis_points:e.Opt(e.Nat64),max_icp_e8s:e.Opt(e.Nat64),neuron_minimum_stake_e8s:e.Opt(e.Nat64),confirmation_text:e.Opt(e.Text),logo:e.Opt(e.Text),name:e.Opt(e.Text),swap_start_timestamp_seconds:e.Opt(e.Nat64),swap_due_timestamp_seconds:e.Opt(e.Nat64),initial_voting_period_seconds:e.Opt(e.Nat64),neuron_minimum_dissolve_delay_to_vote_seconds:e.Opt(e.Nat64),description:e.Opt(e.Text),max_neuron_age_seconds_for_age_bonus:e.Opt(e.Nat64),min_participants:e.Opt(e.Nat64),initial_reward_rate_basis_points:e.Opt(e.Nat64),wait_for_quiet_deadline_increase_seconds:e.Opt(e.Nat64),transaction_fee_e8s:e.Opt(e.Nat64),dapp_canisters:e.Opt(u),neurons_fund_participation_constraints:e.Opt(m),max_age_bonus_percentage:e.Opt(e.Nat64),initial_token_distribution:e.Opt(y),reward_rate_transition_duration_seconds:e.Opt(e.Nat64),token_logo:e.Opt(e.Text),token_name:e.Opt(e.Text),max_participant_icp_e8s:e.Opt(e.Nat64),min_direct_participation_icp_e8s:e.Opt(e.Nat64),proposal_reject_cost_e8s:e.Opt(e.Nat64),restricted_countries:e.Opt(v),min_icp_e8s:e.Opt(e.Nat64),max_direct_participation_icp_e8s:e.Opt(e.Nat64)}),g=e.Record({sns_init_payload:e.Opt(S)}),x=e.Record({restored_dapp_canisters:e.Vec(a),nns_controlled_dapp_canisters:e.Vec(a),sns_controlled_dapp_canisters:e.Vec(a)}),b=e.Record({root:e.Opt(e.Principal),swap:e.Opt(e.Principal),ledger:e.Opt(e.Principal),index:e.Opt(e.Principal),governance:e.Opt(e.Principal)}),T=e.Record({dapp_canisters_transfer_result:e.Opt(x),subnet_id:e.Opt(e.Principal),error:e.Opt(t),canisters:e.Opt(b)}),c=e.Record({allowed_principals:e.Vec(e.Principal)}),f=e.Record({proposal_id:e.Nat64}),p=e.Record({root_canister_id:e.Opt(e.Principal),governance_canister_id:e.Opt(e.Principal),index_canister_id:e.Opt(e.Principal),swap_canister_id:e.Opt(e.Principal),ledger_canister_id:e.Opt(e.Principal)}),F=e.Variant({Error:t,DeployedSns:p}),q=e.Record({get_deployed_sns_by_proposal_id_result:e.Opt(F)}),s=e.Record({archive_wasm_hash:e.Vec(e.Nat8),root_wasm_hash:e.Vec(e.Nat8),swap_wasm_hash:e.Vec(e.Nat8),ledger_wasm_hash:e.Vec(e.Nat8),governance_wasm_hash:e.Vec(e.Nat8),index_wasm_hash:e.Vec(e.Nat8)}),W=e.Record({governance_canister_id:e.Opt(e.Principal),current_version:e.Opt(s)}),G=e.Record({next_version:e.Opt(s)}),C=e.Record({hash:e.Vec(e.Nat8)}),k=e.Record({proposal_id:e.Opt(e.Nat64)}),A=e.Record({sns_subnet_ids:e.Vec(e.Principal)}),U=e.Record({hash:e.Vec(e.Nat8)}),E=e.Record({wasm:e.Opt(n)}),B=e.Record({hash:e.Opt(e.Vec(e.Nat8))}),M=e.Record({contents:e.Opt(e.Vec(e.Nat8)),name:e.Opt(e.Text),visibility:e.Opt(e.Text)}),j=e.Record({sections:e.Vec(M)}),z=e.Variant({Ok:j,Error:t}),H=e.Record({result:e.Opt(z)}),J=e.Record({next_version:e.Opt(s),current_version:e.Opt(s)}),K=e.Record({upgrade_path:e.Vec(J),sns_governance_canister_id:e.Opt(e.Principal)}),Q=e.Record({error:e.Opt(t)}),X=e.Record({instances:e.Vec(p)}),Y=e.Record({limit:e.Nat32,starting_at:e.Opt(s),sns_governance_canister_id:e.Opt(e.Principal)}),Z=e.Record({archive_wasm_hash:e.Text,root_wasm_hash:e.Text,swap_wasm_hash:e.Text,ledger_wasm_hash:e.Text,governance_wasm_hash:e.Text,index_wasm_hash:e.Text}),$=e.Record({pretty_version:e.Opt(Z),version:e.Opt(s)}),D=e.Record({steps:e.Vec($)}),I=e.Record({added_principals:e.Vec(e.Principal),removed_principals:e.Vec(e.Principal)}),L=e.Variant({Error:t,AllowedPrincipals:c}),ee=e.Record({update_allowed_principals_result:e.Opt(L)}),te=e.Record({sns_subnet_ids_to_add:e.Vec(e.Principal),sns_subnet_ids_to_remove:e.Vec(e.Principal)}),se=e.Record({error:e.Opt(t)});return e.Service({add_wasm:e.Func([r],[d],[]),deploy_new_sns:e.Func([g],[T],[]),get_allowed_principals:e.Func([e.Record({})],[c],["query"]),get_deployed_sns_by_proposal_id:e.Func([f],[q],["query"]),get_latest_sns_version_pretty:e.Func([e.Null],[e.Vec(e.Tuple(e.Text,e.Text))],["query"]),get_next_sns_version:e.Func([W],[G],["query"]),get_proposal_id_that_added_wasm:e.Func([C],[k],["query"]),get_sns_subnet_ids:e.Func([e.Record({})],[A],["query"]),get_wasm:e.Func([U],[E],["query"]),get_wasm_metadata:e.Func([B],[H],["query"]),insert_upgrade_path_entries:e.Func([K],[Q],[]),list_deployed_snses:e.Func([e.Record({})],[X],["query"]),list_upgrade_steps:e.Func([Y],[D],["query"]),update_allowed_principals:e.Func([I],[ee],[]),update_sns_subnet_list:e.Func([te],[se],[])})};var re=class e{constructor(o,n){this.service=o;this.certifiedService=n;this.listSnses=async({certified:o=!0})=>{let n=o?this.certifiedService:this.service,{instances:r}=await n.list_deployed_snses({});return r}}static create(o={}){let{service:n,certifiedService:r}=ie({options:{...o,canisterId:o.canisterId??ne},idlFactory:oe,certifiedIdlFactory:ae});return new e(n,r)}};export{re as a};
//# sourceMappingURL=chunk-3GMJYFVP.js.map
