import { Principal } from "@dfinity/principal";
import type { KnownNeuron as RawKnownNeuron, ListNeuronsResponse as RawListNeuronsResponse, ListProposalInfoResponse as RawListProposalInfoResponse, Neuron as RawNeuron, NeuronInfo as RawNeuronInfo, ProposalInfo as RawProposalInfo } from "../../../candid/governance";
import type { KnownNeuron, ListProposalsResponse, Neuron, NeuronInfo, ProposalInfo } from "../../types/governance_converters";
export declare const toNeuronInfo: ({ neuronId, neuronInfo, rawNeuron, canisterId, }: {
    neuronId: bigint;
    neuronInfo: RawNeuronInfo;
    rawNeuron?: RawNeuron;
    canisterId: Principal;
}) => NeuronInfo;
export declare const toNeuron: ({ neuron, canisterId, }: {
    neuron: RawNeuron;
    canisterId: Principal;
}) => Neuron;
export declare const toRawNeuron: ({ neuron, account, }: {
    neuron: Neuron;
    account: Uint8Array;
}) => RawNeuron;
export declare const toProposalInfo: (proposalInfo: RawProposalInfo) => ProposalInfo;
export declare const toArrayOfNeuronInfo: ({ response: { neuron_infos, full_neurons }, canisterId, }: {
    response: RawListNeuronsResponse;
    canisterId: Principal;
}) => Array<NeuronInfo>;
export declare const toListProposalsResponse: ({ proposal_info, }: RawListProposalInfoResponse) => ListProposalsResponse;
export declare const toKnownNeuron: ({ id, known_neuron_data, }: RawKnownNeuron) => KnownNeuron;
